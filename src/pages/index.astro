---
import Layout from "../layouts/Layout.astro";
import Hero from "../components/Hero.astro";
import AboutMe from "../components/AboutMe.astro";
import Projects from "../components/Projects.astro";
import Experience from "../components/Experience.astro";
import Certificates from "../components/Certificates.astro";
import Contact from "../components/Contact.astro";

// Importación de scripts externos para partículas y animaciones
---

<Layout
  title="FERXXO Design System | Estilo Urbano Futurista"
  description="Sistema de diseño visual inspirado en la estética urbana futurista de Feid, mezclando elementos neón con un toque rebelde y sensual"
>
  <!-- Sección Hero con animaciones y efectos neón -->
  <Hero />

  <!-- Sección Sobre Mí con habilidades y estilo Ferxxo -->
  <AboutMe />

  <!-- Sección Proyectos con estética urbana -->
  <Projects />

  <!-- Sección Experiencia sin agrupación por años -->
  <Experience />

  <!-- Sección Certificados con carrusel mejorado -->
  <Certificates />

  <!-- Sección Contacto con elementos visuales inspirados en Medellín -->
  <Contact />
</Layout>

<!-- Script para tsParticles - efectos visuales -->
<script
  is:inline
  src="https://cdn.jsdelivr.net/npm/tsparticles@2.9.3/tsparticles.bundle.min.js"
></script>

<!-- Script para Three.js - efectos 3D -->
<script
  is:inline
  src="https://cdn.jsdelivr.net/npm/three@0.154.0/build/three.min.js"></script>

<!-- Script para Chart.js - visualizaciones de datos -->
<script
  is:inline
  src="https://cdn.jsdelivr.net/npm/chart.js@4.3.2/dist/chart.umd.min.js"
></script>

<!-- Script para p5.js - efectos creativos -->
<script is:inline src="https://cdn.jsdelivr.net/npm/p5@1.7.0/lib/p5.min.js"
></script>

<!-- Script para efectos de distorsión y glitch -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Inicializar partículas con colores neón
    const tsParticlesObj = (window as any).tsParticles;
    if (tsParticlesObj) {
      tsParticlesObj.load("tsparticles", {
        fpsLimit: 60,
        particles: {
          number: {
            value: 80,
            density: {
              enable: true,
              value_area: 800,
            },
          },
          color: {
            value: ["#FF2D9E", "#00F0FF", "#A020F0", "#00FF7F"],
          },
          shape: {
            type: "circle",
          },
          opacity: {
            value: 0.5,
            random: true,
          },
          size: {
            value: 3,
            random: true,
          },
          move: {
            enable: true,
            speed: 2,
            direction: "none",
            random: true,
            straight: false,
            out_mode: "out",
          },
        },
        interactivity: {
          detect_on: "canvas",
          events: {
            onhover: {
              enable: true,
              mode: "repulse",
            },
            onclick: {
              enable: true,
              mode: "push",
            },
          },
        },
        retina_detect: true,
      });
    }

    // Aplicar efecto de distorsión a elementos con clase .glitch-effect
    const glitchElements = document.querySelectorAll(".glitch-effect");

    function applyGlitchEffect() {
      glitchElements.forEach((el) => {
        if (Math.random() > 0.97) {
          el.classList.add("active-glitch");
          setTimeout(() => {
            el.classList.remove("active-glitch");
          }, 200);
        }
      });
    }

    // Ejecutar efecto de glitch periódicamente
    setInterval(applyGlitchEffect, 2000);
  });
</script>
